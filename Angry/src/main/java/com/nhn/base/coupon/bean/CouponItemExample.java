package com.nhn.base.coupon.bean;

import java.util.ArrayList;
import java.util.List;

public class CouponItemExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public CouponItemExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEventIdxIsNull() {
            addCriterion("event_idx is null");
            return (Criteria) this;
        }

        public Criteria andEventIdxIsNotNull() {
            addCriterion("event_idx is not null");
            return (Criteria) this;
        }

        public Criteria andEventIdxEqualTo(Integer value) {
            addCriterion("event_idx =", value, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxNotEqualTo(Integer value) {
            addCriterion("event_idx <>", value, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxGreaterThan(Integer value) {
            addCriterion("event_idx >", value, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxGreaterThanOrEqualTo(Integer value) {
            addCriterion("event_idx >=", value, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxLessThan(Integer value) {
            addCriterion("event_idx <", value, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxLessThanOrEqualTo(Integer value) {
            addCriterion("event_idx <=", value, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxIn(List<Integer> values) {
            addCriterion("event_idx in", values, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxNotIn(List<Integer> values) {
            addCriterion("event_idx not in", values, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxBetween(Integer value1, Integer value2) {
            addCriterion("event_idx between", value1, value2, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andEventIdxNotBetween(Integer value1, Integer value2) {
            addCriterion("event_idx not between", value1, value2, "eventIdx");
            return (Criteria) this;
        }

        public Criteria andNumIsNull() {
            addCriterion("num is null");
            return (Criteria) this;
        }

        public Criteria andNumIsNotNull() {
            addCriterion("num is not null");
            return (Criteria) this;
        }

        public Criteria andNumEqualTo(Integer value) {
            addCriterion("num =", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotEqualTo(Integer value) {
            addCriterion("num <>", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThan(Integer value) {
            addCriterion("num >", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("num >=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThan(Integer value) {
            addCriterion("num <", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThanOrEqualTo(Integer value) {
            addCriterion("num <=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumIn(List<Integer> values) {
            addCriterion("num in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotIn(List<Integer> values) {
            addCriterion("num not in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumBetween(Integer value1, Integer value2) {
            addCriterion("num between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotBetween(Integer value1, Integer value2) {
            addCriterion("num not between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andItempartIsNull() {
            addCriterion("itemPart is null");
            return (Criteria) this;
        }

        public Criteria andItempartIsNotNull() {
            addCriterion("itemPart is not null");
            return (Criteria) this;
        }

        public Criteria andItempartEqualTo(Integer value) {
            addCriterion("itemPart =", value, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartNotEqualTo(Integer value) {
            addCriterion("itemPart <>", value, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartGreaterThan(Integer value) {
            addCriterion("itemPart >", value, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartGreaterThanOrEqualTo(Integer value) {
            addCriterion("itemPart >=", value, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartLessThan(Integer value) {
            addCriterion("itemPart <", value, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartLessThanOrEqualTo(Integer value) {
            addCriterion("itemPart <=", value, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartIn(List<Integer> values) {
            addCriterion("itemPart in", values, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartNotIn(List<Integer> values) {
            addCriterion("itemPart not in", values, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartBetween(Integer value1, Integer value2) {
            addCriterion("itemPart between", value1, value2, "itempart");
            return (Criteria) this;
        }

        public Criteria andItempartNotBetween(Integer value1, Integer value2) {
            addCriterion("itemPart not between", value1, value2, "itempart");
            return (Criteria) this;
        }

        public Criteria andItemtypeIsNull() {
            addCriterion("itemType is null");
            return (Criteria) this;
        }

        public Criteria andItemtypeIsNotNull() {
            addCriterion("itemType is not null");
            return (Criteria) this;
        }

        public Criteria andItemtypeEqualTo(Integer value) {
            addCriterion("itemType =", value, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeNotEqualTo(Integer value) {
            addCriterion("itemType <>", value, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeGreaterThan(Integer value) {
            addCriterion("itemType >", value, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("itemType >=", value, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeLessThan(Integer value) {
            addCriterion("itemType <", value, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeLessThanOrEqualTo(Integer value) {
            addCriterion("itemType <=", value, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeIn(List<Integer> values) {
            addCriterion("itemType in", values, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeNotIn(List<Integer> values) {
            addCriterion("itemType not in", values, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeBetween(Integer value1, Integer value2) {
            addCriterion("itemType between", value1, value2, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("itemType not between", value1, value2, "itemtype");
            return (Criteria) this;
        }

        public Criteria andItemidIsNull() {
            addCriterion("itemID is null");
            return (Criteria) this;
        }

        public Criteria andItemidIsNotNull() {
            addCriterion("itemID is not null");
            return (Criteria) this;
        }

        public Criteria andItemidEqualTo(Integer value) {
            addCriterion("itemID =", value, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidNotEqualTo(Integer value) {
            addCriterion("itemID <>", value, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidGreaterThan(Integer value) {
            addCriterion("itemID >", value, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidGreaterThanOrEqualTo(Integer value) {
            addCriterion("itemID >=", value, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidLessThan(Integer value) {
            addCriterion("itemID <", value, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidLessThanOrEqualTo(Integer value) {
            addCriterion("itemID <=", value, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidIn(List<Integer> values) {
            addCriterion("itemID in", values, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidNotIn(List<Integer> values) {
            addCriterion("itemID not in", values, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidBetween(Integer value1, Integer value2) {
            addCriterion("itemID between", value1, value2, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemidNotBetween(Integer value1, Integer value2) {
            addCriterion("itemID not between", value1, value2, "itemid");
            return (Criteria) this;
        }

        public Criteria andItemnameIsNull() {
            addCriterion("itemName is null");
            return (Criteria) this;
        }

        public Criteria andItemnameIsNotNull() {
            addCriterion("itemName is not null");
            return (Criteria) this;
        }

        public Criteria andItemnameEqualTo(String value) {
            addCriterion("itemName =", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameNotEqualTo(String value) {
            addCriterion("itemName <>", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameGreaterThan(String value) {
            addCriterion("itemName >", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameGreaterThanOrEqualTo(String value) {
            addCriterion("itemName >=", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameLessThan(String value) {
            addCriterion("itemName <", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameLessThanOrEqualTo(String value) {
            addCriterion("itemName <=", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameLike(String value) {
            addCriterion("itemName like", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameNotLike(String value) {
            addCriterion("itemName not like", value, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameIn(List<String> values) {
            addCriterion("itemName in", values, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameNotIn(List<String> values) {
            addCriterion("itemName not in", values, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameBetween(String value1, String value2) {
            addCriterion("itemName between", value1, value2, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemnameNotBetween(String value1, String value2) {
            addCriterion("itemName not between", value1, value2, "itemname");
            return (Criteria) this;
        }

        public Criteria andItemcountIsNull() {
            addCriterion("itemCount is null");
            return (Criteria) this;
        }

        public Criteria andItemcountIsNotNull() {
            addCriterion("itemCount is not null");
            return (Criteria) this;
        }

        public Criteria andItemcountEqualTo(Integer value) {
            addCriterion("itemCount =", value, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountNotEqualTo(Integer value) {
            addCriterion("itemCount <>", value, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountGreaterThan(Integer value) {
            addCriterion("itemCount >", value, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("itemCount >=", value, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountLessThan(Integer value) {
            addCriterion("itemCount <", value, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountLessThanOrEqualTo(Integer value) {
            addCriterion("itemCount <=", value, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountIn(List<Integer> values) {
            addCriterion("itemCount in", values, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountNotIn(List<Integer> values) {
            addCriterion("itemCount not in", values, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountBetween(Integer value1, Integer value2) {
            addCriterion("itemCount between", value1, value2, "itemcount");
            return (Criteria) this;
        }

        public Criteria andItemcountNotBetween(Integer value1, Integer value2) {
            addCriterion("itemCount not between", value1, value2, "itemcount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated do_not_delete_during_merge Mon Feb 06 15:02:12 KST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_event_coupon_item
     *
     * @mbggenerated Mon Feb 06 15:02:12 KST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}