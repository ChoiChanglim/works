package com.nhn.elog.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AbsEventlogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public AbsEventlogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogtimeIsNull() {
            addCriterion("LogTime is null");
            return (Criteria) this;
        }

        public Criteria andLogtimeIsNotNull() {
            addCriterion("LogTime is not null");
            return (Criteria) this;
        }

        public Criteria andLogtimeEqualTo(Date value) {
            addCriterion("LogTime =", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotEqualTo(Date value) {
            addCriterion("LogTime <>", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeGreaterThan(Date value) {
            addCriterion("LogTime >", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LogTime >=", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeLessThan(Date value) {
            addCriterion("LogTime <", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeLessThanOrEqualTo(Date value) {
            addCriterion("LogTime <=", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeIn(List<Date> values) {
            addCriterion("LogTime in", values, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotIn(List<Date> values) {
            addCriterion("LogTime not in", values, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeBetween(Date value1, Date value2) {
            addCriterion("LogTime between", value1, value2, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotBetween(Date value1, Date value2) {
            addCriterion("LogTime not between", value1, value2, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogIsNull() {
            addCriterion("Log is null");
            return (Criteria) this;
        }

        public Criteria andLogIsNotNull() {
            addCriterion("Log is not null");
            return (Criteria) this;
        }

        public Criteria andLogEqualTo(String value) {
            addCriterion("Log =", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogNotEqualTo(String value) {
            addCriterion("Log <>", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogGreaterThan(String value) {
            addCriterion("Log >", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogGreaterThanOrEqualTo(String value) {
            addCriterion("Log >=", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogLessThan(String value) {
            addCriterion("Log <", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogLessThanOrEqualTo(String value) {
            addCriterion("Log <=", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogLike(String value) {
            addCriterion("Log like", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogNotLike(String value) {
            addCriterion("Log not like", value, "log");
            return (Criteria) this;
        }

        public Criteria andLogIn(List<String> values) {
            addCriterion("Log in", values, "log");
            return (Criteria) this;
        }

        public Criteria andLogNotIn(List<String> values) {
            addCriterion("Log not in", values, "log");
            return (Criteria) this;
        }

        public Criteria andLogBetween(String value1, String value2) {
            addCriterion("Log between", value1, value2, "log");
            return (Criteria) this;
        }

        public Criteria andLogNotBetween(String value1, String value2) {
            addCriterion("Log not between", value1, value2, "log");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("UserID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("UserID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("UserID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("UserID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("UserID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("UserID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("UserID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("UserID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Long> values) {
            addCriterion("UserID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Long> values) {
            addCriterion("UserID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("UserID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("UserID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andGamenoIsNull() {
            addCriterion("GameNo is null");
            return (Criteria) this;
        }

        public Criteria andGamenoIsNotNull() {
            addCriterion("GameNo is not null");
            return (Criteria) this;
        }

        public Criteria andGamenoEqualTo(Integer value) {
            addCriterion("GameNo =", value, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoNotEqualTo(Integer value) {
            addCriterion("GameNo <>", value, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoGreaterThan(Integer value) {
            addCriterion("GameNo >", value, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoGreaterThanOrEqualTo(Integer value) {
            addCriterion("GameNo >=", value, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoLessThan(Integer value) {
            addCriterion("GameNo <", value, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoLessThanOrEqualTo(Integer value) {
            addCriterion("GameNo <=", value, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoIn(List<Integer> values) {
            addCriterion("GameNo in", values, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoNotIn(List<Integer> values) {
            addCriterion("GameNo not in", values, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoBetween(Integer value1, Integer value2) {
            addCriterion("GameNo between", value1, value2, "gameno");
            return (Criteria) this;
        }

        public Criteria andGamenoNotBetween(Integer value1, Integer value2) {
            addCriterion("GameNo not between", value1, value2, "gameno");
            return (Criteria) this;
        }

        public Criteria andLvIsNull() {
            addCriterion("Lv is null");
            return (Criteria) this;
        }

        public Criteria andLvIsNotNull() {
            addCriterion("Lv is not null");
            return (Criteria) this;
        }

        public Criteria andLvEqualTo(Integer value) {
            addCriterion("Lv =", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvNotEqualTo(Integer value) {
            addCriterion("Lv <>", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvGreaterThan(Integer value) {
            addCriterion("Lv >", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvGreaterThanOrEqualTo(Integer value) {
            addCriterion("Lv >=", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvLessThan(Integer value) {
            addCriterion("Lv <", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvLessThanOrEqualTo(Integer value) {
            addCriterion("Lv <=", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvIn(List<Integer> values) {
            addCriterion("Lv in", values, "lv");
            return (Criteria) this;
        }

        public Criteria andLvNotIn(List<Integer> values) {
            addCriterion("Lv not in", values, "lv");
            return (Criteria) this;
        }

        public Criteria andLvBetween(Integer value1, Integer value2) {
            addCriterion("Lv between", value1, value2, "lv");
            return (Criteria) this;
        }

        public Criteria andLvNotBetween(Integer value1, Integer value2) {
            addCriterion("Lv not between", value1, value2, "lv");
            return (Criteria) this;
        }

        public Criteria andExpIsNull() {
            addCriterion("Exp is null");
            return (Criteria) this;
        }

        public Criteria andExpIsNotNull() {
            addCriterion("Exp is not null");
            return (Criteria) this;
        }

        public Criteria andExpEqualTo(Integer value) {
            addCriterion("Exp =", value, "exp");
            return (Criteria) this;
        }

        public Criteria andExpNotEqualTo(Integer value) {
            addCriterion("Exp <>", value, "exp");
            return (Criteria) this;
        }

        public Criteria andExpGreaterThan(Integer value) {
            addCriterion("Exp >", value, "exp");
            return (Criteria) this;
        }

        public Criteria andExpGreaterThanOrEqualTo(Integer value) {
            addCriterion("Exp >=", value, "exp");
            return (Criteria) this;
        }

        public Criteria andExpLessThan(Integer value) {
            addCriterion("Exp <", value, "exp");
            return (Criteria) this;
        }

        public Criteria andExpLessThanOrEqualTo(Integer value) {
            addCriterion("Exp <=", value, "exp");
            return (Criteria) this;
        }

        public Criteria andExpIn(List<Integer> values) {
            addCriterion("Exp in", values, "exp");
            return (Criteria) this;
        }

        public Criteria andExpNotIn(List<Integer> values) {
            addCriterion("Exp not in", values, "exp");
            return (Criteria) this;
        }

        public Criteria andExpBetween(Integer value1, Integer value2) {
            addCriterion("Exp between", value1, value2, "exp");
            return (Criteria) this;
        }

        public Criteria andExpNotBetween(Integer value1, Integer value2) {
            addCriterion("Exp not between", value1, value2, "exp");
            return (Criteria) this;
        }

        public Criteria andFreegoldIsNull() {
            addCriterion("FreeGold is null");
            return (Criteria) this;
        }

        public Criteria andFreegoldIsNotNull() {
            addCriterion("FreeGold is not null");
            return (Criteria) this;
        }

        public Criteria andFreegoldEqualTo(Long value) {
            addCriterion("FreeGold =", value, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldNotEqualTo(Long value) {
            addCriterion("FreeGold <>", value, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldGreaterThan(Long value) {
            addCriterion("FreeGold >", value, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldGreaterThanOrEqualTo(Long value) {
            addCriterion("FreeGold >=", value, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldLessThan(Long value) {
            addCriterion("FreeGold <", value, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldLessThanOrEqualTo(Long value) {
            addCriterion("FreeGold <=", value, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldIn(List<Long> values) {
            addCriterion("FreeGold in", values, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldNotIn(List<Long> values) {
            addCriterion("FreeGold not in", values, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldBetween(Long value1, Long value2) {
            addCriterion("FreeGold between", value1, value2, "freegold");
            return (Criteria) this;
        }

        public Criteria andFreegoldNotBetween(Long value1, Long value2) {
            addCriterion("FreeGold not between", value1, value2, "freegold");
            return (Criteria) this;
        }

        public Criteria andRealgoldIsNull() {
            addCriterion("RealGold is null");
            return (Criteria) this;
        }

        public Criteria andRealgoldIsNotNull() {
            addCriterion("RealGold is not null");
            return (Criteria) this;
        }

        public Criteria andRealgoldEqualTo(Long value) {
            addCriterion("RealGold =", value, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldNotEqualTo(Long value) {
            addCriterion("RealGold <>", value, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldGreaterThan(Long value) {
            addCriterion("RealGold >", value, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldGreaterThanOrEqualTo(Long value) {
            addCriterion("RealGold >=", value, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldLessThan(Long value) {
            addCriterion("RealGold <", value, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldLessThanOrEqualTo(Long value) {
            addCriterion("RealGold <=", value, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldIn(List<Long> values) {
            addCriterion("RealGold in", values, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldNotIn(List<Long> values) {
            addCriterion("RealGold not in", values, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldBetween(Long value1, Long value2) {
            addCriterion("RealGold between", value1, value2, "realgold");
            return (Criteria) this;
        }

        public Criteria andRealgoldNotBetween(Long value1, Long value2) {
            addCriterion("RealGold not between", value1, value2, "realgold");
            return (Criteria) this;
        }

        public Criteria andFpIsNull() {
            addCriterion("FP is null");
            return (Criteria) this;
        }

        public Criteria andFpIsNotNull() {
            addCriterion("FP is not null");
            return (Criteria) this;
        }

        public Criteria andFpEqualTo(Integer value) {
            addCriterion("FP =", value, "fp");
            return (Criteria) this;
        }

        public Criteria andFpNotEqualTo(Integer value) {
            addCriterion("FP <>", value, "fp");
            return (Criteria) this;
        }

        public Criteria andFpGreaterThan(Integer value) {
            addCriterion("FP >", value, "fp");
            return (Criteria) this;
        }

        public Criteria andFpGreaterThanOrEqualTo(Integer value) {
            addCriterion("FP >=", value, "fp");
            return (Criteria) this;
        }

        public Criteria andFpLessThan(Integer value) {
            addCriterion("FP <", value, "fp");
            return (Criteria) this;
        }

        public Criteria andFpLessThanOrEqualTo(Integer value) {
            addCriterion("FP <=", value, "fp");
            return (Criteria) this;
        }

        public Criteria andFpIn(List<Integer> values) {
            addCriterion("FP in", values, "fp");
            return (Criteria) this;
        }

        public Criteria andFpNotIn(List<Integer> values) {
            addCriterion("FP not in", values, "fp");
            return (Criteria) this;
        }

        public Criteria andFpBetween(Integer value1, Integer value2) {
            addCriterion("FP between", value1, value2, "fp");
            return (Criteria) this;
        }

        public Criteria andFpNotBetween(Integer value1, Integer value2) {
            addCriterion("FP not between", value1, value2, "fp");
            return (Criteria) this;
        }

        public Criteria andFreegemIsNull() {
            addCriterion("FreeGem is null");
            return (Criteria) this;
        }

        public Criteria andFreegemIsNotNull() {
            addCriterion("FreeGem is not null");
            return (Criteria) this;
        }

        public Criteria andFreegemEqualTo(Integer value) {
            addCriterion("FreeGem =", value, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemNotEqualTo(Integer value) {
            addCriterion("FreeGem <>", value, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemGreaterThan(Integer value) {
            addCriterion("FreeGem >", value, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemGreaterThanOrEqualTo(Integer value) {
            addCriterion("FreeGem >=", value, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemLessThan(Integer value) {
            addCriterion("FreeGem <", value, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemLessThanOrEqualTo(Integer value) {
            addCriterion("FreeGem <=", value, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemIn(List<Integer> values) {
            addCriterion("FreeGem in", values, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemNotIn(List<Integer> values) {
            addCriterion("FreeGem not in", values, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemBetween(Integer value1, Integer value2) {
            addCriterion("FreeGem between", value1, value2, "freegem");
            return (Criteria) this;
        }

        public Criteria andFreegemNotBetween(Integer value1, Integer value2) {
            addCriterion("FreeGem not between", value1, value2, "freegem");
            return (Criteria) this;
        }

        public Criteria andRealgemIsNull() {
            addCriterion("RealGem is null");
            return (Criteria) this;
        }

        public Criteria andRealgemIsNotNull() {
            addCriterion("RealGem is not null");
            return (Criteria) this;
        }

        public Criteria andRealgemEqualTo(Integer value) {
            addCriterion("RealGem =", value, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemNotEqualTo(Integer value) {
            addCriterion("RealGem <>", value, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemGreaterThan(Integer value) {
            addCriterion("RealGem >", value, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemGreaterThanOrEqualTo(Integer value) {
            addCriterion("RealGem >=", value, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemLessThan(Integer value) {
            addCriterion("RealGem <", value, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemLessThanOrEqualTo(Integer value) {
            addCriterion("RealGem <=", value, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemIn(List<Integer> values) {
            addCriterion("RealGem in", values, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemNotIn(List<Integer> values) {
            addCriterion("RealGem not in", values, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemBetween(Integer value1, Integer value2) {
            addCriterion("RealGem between", value1, value2, "realgem");
            return (Criteria) this;
        }

        public Criteria andRealgemNotBetween(Integer value1, Integer value2) {
            addCriterion("RealGem not between", value1, value2, "realgem");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table abs_event_log
     *
     * @mbggenerated do_not_delete_during_merge Mon Apr 10 15:21:10 KST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table abs_event_log
     *
     * @mbggenerated Mon Apr 10 15:21:10 KST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}