<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
    
    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/**" />

    <!-- 처리할 수 없는 요청은 컨테이너 defalut-servlet 에게 위임하는 설정 -->
    <!-- 정적인 요소들(html, js, css, gif)을 넘김 -->
    <context:component-scan base-package="com.nhn" />   
    
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <!-- <mvc:exclude-mapping path="/service/**" /> -->
            <mvc:exclude-mapping path="/service/**" />
            <mvc:exclude-mapping path="/monitor/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <bean class="com.nhn.base.constant.interceptor.BaseInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/service/**" />
            <mvc:exclude-mapping path="/monitor/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" >
        <property name="defaultLocale" value="en"/>
        <property name="cookieName" value="LOCAL"/>    
        <property name="cookieMaxAge" value="604800"/> <!-- 60 * 60 * 24 * 7 -->
        <property name="cookiePath" value="/"/>
    </bean>
    
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:Messages/message"/>
        <property name="defaultEncoding" value="UTF-8" />
        <property name="cacheSeconds" value="180"/>
    </bean>
    
   
    <tx:annotation-driven transaction-manager="baseTransactionManager" />
    <tx:annotation-driven transaction-manager="elogTransactionManager" />
    
    <!-- 기본세팅 -->
    <util:properties id="propinfo">
        <prop key="Zone">Real</prop>
        <prop key="AdminApiUrl">http://133.186.139.196:18888/v1.0/adminAPI</prop>
    </util:properties>
    
    <!-- hsp 커텍트 모듈 -->
    <bean id="hspConnectorFactory" class="com.nhn.hsp.HspConnectorFactory">
        <constructor-arg value="KAKAO_REAL"/>
        <constructor-arg value="10381"/> <!-- 앵아 아시아빌드 java hsp connector 사용 -->
    </bean>

    <!-- view resolver -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>classpath*:tiles.xml</value>
            </list>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json" />
                                <entry key="nhn" value="application/html" />
                            </map>
                        </constructor-arg>
                        
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="viewResolvers">
            <list>
                 <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
                    <property name="contentType" value="application/html"/>
                </bean>
                
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
                    <property name="prefix" value="/WEB-INF/jsp/" />
                    <property name="suffix" value=".jsp" />
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <!-- JSON View -->
                <bean class="com.nhn.base.constant.AngryMappingJacksonJsonView" />
            </list>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    
    <!-- exception 처리 -->
    <bean class="com.nhn.common.exception.Exceptionlog">
        <property name="exceptionMappings">
            <props>
                <prop key="ParameterNotFoundException">exception/paramNotFound</prop>
                <prop key="CustomException">exception/customException</prop>
                <prop key="PageNotFoundException">exception/pageNotFound</prop>
                <prop key="Exception">exception/error</prop>
            </props>
        </property>
        <property name="exceptionAttribute" value="sampleException" />
        <property name="defaultErrorView" value="exception/error" />
    </bean>
</beans>
